/**
 * Drizzle UI Styles
 */

/** @define Arrange; weak */

/**
 * This component lets you lay out a row of cells in various ways. You can
 * specify whether a cell should be wide enough to fit its content, or take up
 * the remaining space in the row. It's also possible to give all cells an
 * equal width, and to control their vertical alignment.
 */

/**
 * 1. Protect against the component expanding beyond the confines of its
 *    container if properties affecting the box-model are applied to the
 *    component. Mainly necessary because of (5).
 * 2. Rely on table layout.
 * 3. Zero out the default spacing that might be on an element (e.g., `ul`).
 * 4. Make sure the component fills at least the full width of its parent.
 * 5. Reset the table-layout algorithm in case a component is nested.
 */

.drizzle-Arrange {
  box-sizing: border-box; /* 1 */
  display: table; /* 2 */
  margin: 0; /* 3 */
  min-width: 100%; /* 4 */
  padding: 0; /* 3 */
  table-layout: auto; /* 5 */
}

/**
 * There are three possible types of child. `sizeFill` will expand to fill all
 * of the remaining space not filled by `sizeFit` elements. `row` will begin a
 * new row context, keeping columns the same size.
 *
 * 1. Zero out any default spacing that might be on an element (e.g., `li`);
 *    Margin has no effect when coupled with `display: table-cell`.
 * 2. All cells are top-aligned by default
 */

.drizzle-Arrange-sizeFill,
.drizzle-Arrange-sizeFit {
  display: table-cell;
  padding: 0; /* 1 */
  vertical-align: top; /* 2 */
}

/**
 * Make sure the main content block expands to fill the remaining space.
 */

.drizzle-Arrange-sizeFill {
  width: 100%;
}

/**
 * Where possible, protect against large images breaking the layout. Prevent them from
 * exceeding the width of the main content block by making them fluid.
 *
 * Only work for all browsers with the `Arrange--equally` variant. For Firefox
 * and IE to constrain image dimensions for other layouts, large images will
 * need their width set to `100%`.
 */

.drizzle-Arrange-sizeFill img {
  height: auto;
  max-width: 100%;
}

/**
 * Defend against a side-effect of this layout pattern: images in
 * 'Arrange-sizeFit' cannot be fluid, otherwise they lose their ability to
 * provide size to a cell.
 */

.drizzle-Arrange-sizeFit img {
  max-width: none !important;
  width: auto !important;
}

/**
 * Start a new row context.
 */

.drizzle-Arrange-row {
  display: table-row;
}

/* Vertical alignment modifiers
   ========================================================================== */

.drizzle-Arrange--middle > .drizzle-Arrange-sizeFill,
.drizzle-Arrange--middle > .drizzle-Arrange-sizeFit {
  vertical-align: middle;
}

.drizzle-Arrange--bottom > .drizzle-Arrange-sizeFill,
.drizzle-Arrange--bottom > .drizzle-Arrange-sizeFit {
  vertical-align: bottom;
}

/* Equal-width modifier
   ========================================================================== */

/**
 * This layout algorithm will create equal-width table cells, irrespective of
 * the width of their content.
 *
 * 1. The layout algorithm requires a set width to correctly calculate table
 *    cell width.
 */

.drizzle-Arrange--equal {
  table-layout: fixed;
  width: 100%; /* 1 */
}

/**
 * Give the cells an equal width. This value ensures that Arrange is still 100%
 * wide when gutters are used in conjunctions with equal-width cells.
 *
 * It's recommended that only 'Arrange-sizeFill' be used for equal width cells.
 * Their inner images will automatically be responsive.
 */

.drizzle-Arrange--equal > .drizzle-Arrange-sizeFill,
.drizzle-Arrange--equal > .drizzle-Arrange-sizeFit,
.drizzle-Arrange--equal > .drizzle-Arrange-row > .drizzle-Arrange-sizeFill,
.drizzle-Arrange--equal > .drizzle-Arrange-row > .drizzle-Arrange-sizeFit {
  width: 1%;
}

/* Gutter modifier
   ========================================================================== */

/**
 * Add a gutter between cells
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.drizzle-Arrange--withGutter {
  margin: 0 -0.25rem;
}

.drizzle-Arrange--withGutter > .drizzle-Arrange-sizeFit,
.drizzle-Arrange--withGutter > .drizzle-Arrange-sizeFill,
.drizzle-Arrange--withGutter > .drizzle-Arrange-row > .drizzle-Arrange-sizeFit,
.drizzle-Arrange--withGutter > .drizzle-Arrange-row > .drizzle-Arrange-sizeFill {
  padding: 0 0.25rem;
}

/** @define Grid */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.drizzle-Grid {
  box-sizing: border-box;
  display: flex; /* 1 */
  flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
}

/**
 * Modifier: center align all grid cells
 */

.drizzle-Grid--alignCenter {
  justify-content: center;
}

/**
 * Modifier: right align all grid cells
 */

.drizzle-Grid--alignRight {
  justify-content: flex-end;
}

/**
 * Modifier: middle-align grid cells
 */

.drizzle-Grid--alignMiddle {
  -ms-grid-row-align: center;
      align-items: center;
}

/**
 * Modifier: bottom-align grid cells
 */

.drizzle-Grid--alignBottom {
  -ms-grid-row-align: flex-end;
      align-items: flex-end;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */

.drizzle-Grid--fit > .drizzle-Grid-cell {
  flex: 1 1 0%; /* 1 */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 */

.drizzle-Grid--equalHeight > .drizzle-Grid-cell {
  display: flex;
}

/**
 * Modifier: gutters
 */

.drizzle-Grid--withGutter {
  margin: 0 -10px;
}

.drizzle-Grid--withGutter > .drizzle-Grid-cell {
  padding: 0 10px;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */

.drizzle-Grid-cell {
  box-sizing: inherit;
  flex-basis: 100%; /* 1 */
  min-width: 0; /* 2 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.drizzle-Grid-cell--center {
  margin: 0 auto;
}

:root {
  /* Common properties */

  /* SUIT component properties */
}
body {
  background-color: #fff !important;
}

code,
pre {
  font-family: "Source Code Pro", monospace !important;
}

.drizzle-FrameThumb {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 0;
  padding-top: 56.24993%;
  background: no-repeat center/20% url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 17 22' width='17' height='22' fill='white'><polygon points='0 0 10 0 10 7 17 7 17 22 0 22'/><polygon points='11 0 17 6 11 6'/></svg>") #f0f0f0;
}

.drizzle-FrameThumb > a {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border: 2px solid rgba(0,0,0,0.1);
}

/**
 * 1. Multiply the dimenions of the iframe to counteract whatever scaling will
 *    be applied via transform. 1% wiggle room is added to avoid blurry edges
 *    along the top and bottom.
 * 2. Scale the iframe back down to the container size. This gives us a "zoomed
 *    out" view of the page within the thumbnail.
 */

.drizzle-FrameThumb > iframe {
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  width: 201%; /* 1 */
  height: 201%; /* 1 */
  border: 0;
  background: #fff;
  transform: scale(0.5); /* 2 */
  transform-origin: top left; /* 2 */
}

.drizzle-FrameThumb.is-loaded > iframe {
  visibility: visible;
}
.drizzle-Item {
  padding: 1rem 0;
}

.drizzle-Item-control {
  background-color: transparent;
  border: 0;
  cursor: pointer;
  font-size: 0.75rem;
  line-height: 1;
  padding: 0.5rem 0;
  text-decoration: none;
  vertical-align: baseline
}

.drizzle-Item-control svg {
  fill: currentColor;
  height: 1em;
  margin-top: -0.375em;
  position: relative;
  vertical-align: middle;
  width: 1.5em;
}

.drizzle-Label {
  background-color: #f0f0f0;
  border-radius: 0.25rem;
  display: inline-block;
  font-size: 0.75rem;
  line-height: 1;
  padding: 0.5rem;
  vertical-align: inherit;
}

.drizzle-Label--inprogress {
  background-color: #ffdc00;
  color: #111;
}

.drizzle-Label--deprecated {
  background-color: #ff4136;
  color: #fff;
}

.drizzle-Label--approved {
  background-color: #2ecc40;
  color: #fff;
}

.drizzle-Layout {
  height: 100%;
  margin: 0;
}

.drizzle-Layout-nav,
.drizzle-Layout-body,
.drizzle-Layout-main {
  margin: 0;
  position: relative;
}

.drizzle-Content-main h1:not(:first-child),
.drizzle-Content-main h2:not(:first-child),
.drizzle-Content-main h3:not(:first-child),
.drizzle-Content-main h4:not(:first-child),
.drizzle-Content-main h5:not(:first-child),
.drizzle-Content-main h6:not(:first-child) {
  margin: 2em 0 1em;
}

.drizzle-Item-notes p,
.drizzle-Content-main > p {
  color: #333;
  line-height: 1.5;
}

.drizzle-Content-main a {
  color: #0074d9;
}

.drizzle-Content-main > p > code {
  color: #555;
  background-color: #f0f0f0;
  display: inline-block;
  padding: 0.125em;
  border-radius: 0.25em;
}

@media (min-width: 60em) {
  .drizzle-Layout-nav {
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    overflow-x: hidden;
    overflow-y: auto;
    box-sizing: border-box;
    width: 14rem;
    height: 100%;

    -webkit-overflow-scrolling: touch;
  }

  .drizzle-Layout-main {
    margin-left: 14rem;
    padding: 2.5vh 5%;
  }
}

.drizzle-Nav {
  background: #f0f0f0;
}

.drizzle-Nav-header {
  background: #0074d9;
  color: #fff;
  padding: 0.75rem 1rem;
  position: relative;
}

.drizzle-Nav-header-toggle {
  position: absolute;
  width: 3em;
  top: 0;
  right: 0;
  bottom: 0
}

@media (min-width: 60em) {

  .drizzle-Nav-header-toggle {
    display: none;
  }
  }

.drizzle-Nav-header-toggle > svg {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

.drizzle-Nav a,
.drizzle-Nav a:hover,
.drizzle-Nav a:focus,
.drizzle-Nav a:active {
  text-decoration: none;
}

.drizzle-Nav a:not(.is-active),
.drizzle-Nav a:hover:not(.is-active),
.drizzle-Nav a:focus:not(.is-active),
.drizzle-Nav a:active:not(.is-active) {
  color: inherit;
}

.drizzle-Nav-main {
  display: none;
  padding-bottom: 1rem;
}

@media (min-width: 60em) {
  .drizzle-Nav-main {
    display: block;
  }
}

.drizzle-Nav.is-active .drizzle-Nav-main {
  display: block;
}

.drizzle-Nav-menu {
  margin: 0;
  padding: 0;
  list-style: none;
}

.drizzle-Nav-item {
  display: block;
  padding: 0.75rem 1rem;
  margin: 0;
  text-transform: uppercase;
  color: white;
  background-color: #444;
}

[href].drizzle-Nav-item {
  color: black;
  text-transform: none;
  background-color: transparent;
}

[href].drizzle-Nav-item:hover {
  background-color: #ddd;
}

.drizzle-Nav-item.is-active {
  background-color: #fff;
}

.drizzle-Nav-menu .drizzle-Nav-menu .drizzle-Nav-item {
  font-size: 0.75em;
  padding-left: 2rem;
}

:root { /* 16:9 */
}

/**
 * 1. Improves swatch visibility on low-contrast background colors.
 * 2. Double the intended stroke-width because only the inner half will be
 *    within the visible viewBox.
 */

.drizzle-Swatch {
  width: 10em;
  height: 5.625em;
  stroke: rgba(0, 0, 0, 0.1); /* 1 */
  stroke-width: 4px; /* 2 */
}
/**
 * Theme for Prism.js
 */

code[class*="language-"], pre[class*="language-"] {
  background-color: rgb(248, 248, 248);
  color: #444;
  cursor: text;
  direction: ltr;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  overflow: auto;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
}

.token {
}

.token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata,
  .token.punctuation {
  color: #aaa;
}

.token.string,
  .token.atrule,
  .token.attr-value {
  color: #ff851b;
}

.token.property,
  .token.tag {
  color: #0074d9;
}

.token.boolean,
  .token.number {
  color: #ff4136;
}

.token.selector,
  .token.attr-name,
  .token.attr-value .punctuation:first-child,
  .token.keyword,
  .token.regex,
  .token.important {
  color: #0074d9;
}

.token.operator,
  .token.entity,
  .token.url {
  color: #b10dc9;
}

.token.entity {
  cursor: help;
}

/**
 * @define utilities
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */

.drizzle-u-alignBaseline {
  vertical-align: baseline !important;
}

.drizzle-u-alignBottom {
  vertical-align: bottom !important;
}

.drizzle-u-alignMiddle {
  vertical-align: middle !important;
}

.drizzle-u-alignTop {
  vertical-align: top !important;
}
/**
 * @define utilities
 * Display-type utilities
 */

.drizzle-u-block {
  display: block !important;
}

.drizzle-u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.drizzle-u-hiddenVisually {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.drizzle-u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.drizzle-u-inlineBlock {
  display: inline-block !important;
  max-width: 100%; /* 1 */
}

.drizzle-u-table {
  display: table !important;
}

.drizzle-u-tableCell {
  display: table-cell !important;
}

.drizzle-u-tableRow {
  display: table-row !important;
}
/**
 * @define utilities
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.drizzle-u-cf::before,
.drizzle-u-cf::after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.drizzle-u-cf::after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.drizzle-u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.drizzle-u-nbfcAlt {
  display: table-cell !important; /* 1 */
  width: 10000px !important; /* 2 */
}

/**
 * Floats
 */

.drizzle-u-floatLeft {
  float: left !important;
}

.drizzle-u-floatRight {
  float: right !important;
}
/**
 * @define utilities
 * Clean link
 *
 * A link without any text-decoration at all.
 */

.drizzle-u-linkClean,
.drizzle-u-linkClean:hover,
.drizzle-u-linkClean:focus,
.drizzle-u-linkClean:active {
  text-decoration: none !important;
}

/**
 * Link complex
 *
 * A common pattern is to have a link with several pieces of text and/or an
 * icon, where only one piece of text should display the underline when the
 * link is the subject of user interaction.
 *
 * Example HTML:
 *
 * <a class="u-linkComplex" href="#">
 *   Link complex
 *   <span class="u-linkComplexTarget">target</span>
 * </a>
 */

.drizzle-u-linkComplex,
.drizzle-u-linkComplex:hover,
.drizzle-u-linkComplex:focus,
.drizzle-u-linkComplex:active {
  text-decoration: none !important;
}

.drizzle-u-linkComplex:hover .drizzle-u-linkComplexTarget,
.drizzle-u-linkComplex:focus .drizzle-u-linkComplexTarget,
.drizzle-u-linkComplex:active .drizzle-u-linkComplexTarget {
  text-decoration: underline !important;
}

/**
 * Block-level link
 *
 * Combination of traits commonly used in vertical navigation lists.
 */

.drizzle-u-linkBlock,
.drizzle-u-linkBlock:hover,
.drizzle-u-linkBlock:focus,
.drizzle-u-linkBlock:active {
  display: block !important;
  text-decoration: none !important;
}
/**
 * @define utilities
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

.drizzle-u-after1of12 {
  margin-right: 8.33333% !important;
}

.drizzle-u-after1of10 {
  margin-right: 10% !important;
}

.drizzle-u-after1of8 {
  margin-right: 12.5% !important;
}

.drizzle-u-after1of6,
.drizzle-u-after2of12 {
  margin-right: 16.66667% !important;
}

.drizzle-u-after1of5,
.drizzle-u-after2of10 {
  margin-right: 20% !important;
}

.drizzle-u-after1of4,
.drizzle-u-after2of8,
.drizzle-u-after3of12 {
  margin-right: 25% !important;
}

.drizzle-u-after3of10 {
  margin-right: 30% !important;
}

.drizzle-u-after1of3,
.drizzle-u-after2of6,
.drizzle-u-after4of12 {
  margin-right: 33.33333% !important;
}

.drizzle-u-after3of8 {
  margin-right: 37.5% !important;
}

.drizzle-u-after2of5,
.drizzle-u-after4of10 {
  margin-right: 40% !important;
}

.drizzle-u-after5of12 {
  margin-right: 41.66667% !important;
}

.drizzle-u-after1of2,
.drizzle-u-after2of4,
.drizzle-u-after3of6,
.drizzle-u-after4of8,
.drizzle-u-after5of10,
.drizzle-u-after6of12 {
  margin-right: 50% !important;
}

.drizzle-u-after7of12 {
  margin-right: 58.33333% !important;
}

.drizzle-u-after3of5,
.drizzle-u-after6of10 {
  margin-right: 60% !important;
}

.drizzle-u-after5of8 {
  margin-right: 62.5% !important;
}

.drizzle-u-after2of3,
.drizzle-u-after4of6,
.drizzle-u-after8of12 {
  margin-right: 66.66667% !important;
}

.drizzle-u-after7of10 {
  margin-right: 70% !important;
}

.drizzle-u-after3of4,
.drizzle-u-after6of8,
.drizzle-u-after9of12 {
  margin-right: 75% !important;
}

.drizzle-u-after4of5,
.drizzle-u-after8of10 {
  margin-right: 80% !important;
}

.drizzle-u-after5of6,
.drizzle-u-after10of12 {
  margin-right: 83.33333% !important;
}

.drizzle-u-after7of8 {
  margin-right: 87.5% !important;
}

.drizzle-u-after9of10 {
  margin-right: 90% !important;
}

.drizzle-u-after11of12 {
  margin-right: 91.66667% !important;
}
/**
 * @define utilities
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (max-width: 30em) {

  .drizzle-u-sm-afterNone {
    margin-right: 0 !important;
  }

  .drizzle-u-sm-after1of12 {
    margin-right: 8.33333% !important;
  }

  .drizzle-u-sm-after1of10 {
    margin-right: 10% !important;
  }

  .drizzle-u-sm-after1of8 {
    margin-right: 12.5% !important;
  }

  .drizzle-u-sm-after1of6,
  .drizzle-u-sm-after2of12 {
    margin-right: 16.66667% !important;
  }

  .drizzle-u-sm-after1of5,
  .drizzle-u-sm-after2of10 {
    margin-right: 20% !important;
  }

  .drizzle-u-sm-after1of4,
  .drizzle-u-sm-after2of8,
  .drizzle-u-sm-after3of12 {
    margin-right: 25% !important;
  }

  .drizzle-u-sm-after3of10 {
    margin-right: 30% !important;
  }

  .drizzle-u-sm-after1of3,
  .drizzle-u-sm-after2of6,
  .drizzle-u-sm-after4of12 {
    margin-right: 33.33333% !important;
  }

  .drizzle-u-sm-after3of8 {
    margin-right: 37.5% !important;
  }

  .drizzle-u-sm-after2of5,
  .drizzle-u-sm-after4of10 {
    margin-right: 40% !important;
  }

  .drizzle-u-sm-after5of12 {
    margin-right: 41.66667% !important;
  }

  .drizzle-u-sm-after1of2,
  .drizzle-u-sm-after2of4,
  .drizzle-u-sm-after3of6,
  .drizzle-u-sm-after4of8,
  .drizzle-u-sm-after5of10,
  .drizzle-u-sm-after6of12 {
    margin-right: 50% !important;
  }

  .drizzle-u-sm-after7of12 {
    margin-right: 58.33333% !important;
  }

  .drizzle-u-sm-after3of5,
  .drizzle-u-sm-after6of10 {
    margin-right: 60% !important;
  }

  .drizzle-u-sm-after5of8 {
    margin-right: 62.5% !important;
  }

  .drizzle-u-sm-after2of3,
  .drizzle-u-sm-after4of6,
  .drizzle-u-sm-after8of12 {
    margin-right: 66.66667% !important;
  }

  .drizzle-u-sm-after7of10 {
    margin-right: 70% !important;
  }

  .drizzle-u-sm-after3of4,
  .drizzle-u-sm-after6of8,
  .drizzle-u-sm-after9of12 {
    margin-right: 75% !important;
  }

  .drizzle-u-sm-after4of5,
  .drizzle-u-sm-after8of10 {
    margin-right: 80% !important;
  }

  .drizzle-u-sm-after5of6,
  .drizzle-u-sm-after10of12 {
    margin-right: 83.33333% !important;
  }

  .drizzle-u-sm-after7of8 {
    margin-right: 87.5% !important;
  }

  .drizzle-u-sm-after9of10 {
    margin-right: 90% !important;
  }

  .drizzle-u-sm-after11of12 {
    margin-right: 91.66667% !important;
  }

}
/**
 * @define utilities
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 40em) {

  .drizzle-u-md-afterNone {
    margin-right: 0 !important;
  }

  .drizzle-u-md-after1of12 {
    margin-right: 8.33333% !important;
  }

  .drizzle-u-md-after1of10 {
    margin-right: 10% !important;
  }

  .drizzle-u-md-after1of8 {
    margin-right: 12.5% !important;
  }

  .drizzle-u-md-after1of6,
  .drizzle-u-md-after2of12 {
    margin-right: 16.66667% !important;
  }

  .drizzle-u-md-after1of5,
  .drizzle-u-md-after2of10 {
    margin-right: 20% !important;
  }

  .drizzle-u-md-after1of4,
  .drizzle-u-md-after2of8,
  .drizzle-u-md-after3of12 {
    margin-right: 25% !important;
  }

  .drizzle-u-md-after3of10 {
    margin-right: 30% !important;
  }

  .drizzle-u-md-after1of3,
  .drizzle-u-md-after2of6,
  .drizzle-u-md-after4of12 {
    margin-right: 33.33333% !important;
  }

  .drizzle-u-md-after3of8 {
    margin-right: 37.5% !important;
  }

  .drizzle-u-md-after2of5,
  .drizzle-u-md-after4of10 {
    margin-right: 40% !important;
  }

  .drizzle-u-md-after5of12 {
    margin-right: 41.66667% !important;
  }

  .drizzle-u-md-after1of2,
  .drizzle-u-md-after2of4,
  .drizzle-u-md-after3of6,
  .drizzle-u-md-after4of8,
  .drizzle-u-md-after5of10,
  .drizzle-u-md-after6of12 {
    margin-right: 50% !important;
  }

  .drizzle-u-md-after7of12 {
    margin-right: 58.33333% !important;
  }

  .drizzle-u-md-after3of5,
  .drizzle-u-md-after6of10 {
    margin-right: 60% !important;
  }

  .drizzle-u-md-after5of8 {
    margin-right: 62.5% !important;
  }

  .drizzle-u-md-after2of3,
  .drizzle-u-md-after4of6,
  .drizzle-u-md-after8of12 {
    margin-right: 66.66667% !important;
  }

  .drizzle-u-md-after7of10 {
    margin-right: 70% !important;
  }

  .drizzle-u-md-after3of4,
  .drizzle-u-md-after6of8,
  .drizzle-u-md-after9of12 {
    margin-right: 75% !important;
  }

  .drizzle-u-md-after4of5,
  .drizzle-u-md-after8of10 {
    margin-right: 80% !important;
  }

  .drizzle-u-md-after5of6,
  .drizzle-u-md-after10of12 {
    margin-right: 83.33333% !important;
  }

  .drizzle-u-md-after7of8 {
    margin-right: 87.5% !important;
  }

  .drizzle-u-md-after9of10 {
    margin-right: 90% !important;
  }

  .drizzle-u-md-after11of12 {
    margin-right: 91.66667% !important;
  }

}
/**
 * @define utilities
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 60em) {

  .drizzle-u-lg-afterNone {
    margin-right: 0 !important;
  }

  .drizzle-u-lg-after1of12 {
    margin-right: 8.33333% !important;
  }

  .drizzle-u-lg-after1of10 {
    margin-right: 10% !important;
  }

  .drizzle-u-lg-after1of8 {
    margin-right: 12.5% !important;
  }

  .drizzle-u-lg-after1of6,
  .drizzle-u-lg-after2of12 {
    margin-right: 16.66667% !important;
  }

  .drizzle-u-lg-after1of5,
  .drizzle-u-lg-after2of10 {
    margin-right: 20% !important;
  }

  .drizzle-u-lg-after1of4,
  .drizzle-u-lg-after2of8,
  .drizzle-u-lg-after3of12 {
    margin-right: 25% !important;
  }

  .drizzle-u-lg-after3of10 {
    margin-right: 30% !important;
  }

  .drizzle-u-lg-after1of3,
  .drizzle-u-lg-after2of6,
  .drizzle-u-lg-after4of12 {
    margin-right: 33.33333% !important;
  }

  .drizzle-u-lg-after3of8 {
    margin-right: 37.5% !important;
  }

  .drizzle-u-lg-after2of5,
  .drizzle-u-lg-after4of10 {
    margin-right: 40% !important;
  }

  .drizzle-u-lg-after5of12 {
    margin-right: 41.66667% !important;
  }

  .drizzle-u-lg-after1of2,
  .drizzle-u-lg-after2of4,
  .drizzle-u-lg-after3of6,
  .drizzle-u-lg-after4of8,
  .drizzle-u-lg-after5of10,
  .drizzle-u-lg-after6of12 {
    margin-right: 50% !important;
  }

  .drizzle-u-lg-after7of12 {
    margin-right: 58.33333% !important;
  }

  .drizzle-u-lg-after3of5,
  .drizzle-u-lg-after6of10 {
    margin-right: 60% !important;
  }

  .drizzle-u-lg-after5of8 {
    margin-right: 62.5% !important;
  }

  .drizzle-u-lg-after2of3,
  .drizzle-u-lg-after4of6,
  .drizzle-u-lg-after8of12 {
    margin-right: 66.66667% !important;
  }

  .drizzle-u-lg-after7of10 {
    margin-right: 70% !important;
  }

  .drizzle-u-lg-after3of4,
  .drizzle-u-lg-after6of8,
  .drizzle-u-lg-after9of12 {
    margin-right: 75% !important;
  }

  .drizzle-u-lg-after4of5,
  .drizzle-u-lg-after8of10 {
    margin-right: 80% !important;
  }

  .drizzle-u-lg-after5of6,
  .drizzle-u-lg-after10of12 {
    margin-right: 83.33333% !important;
  }

  .drizzle-u-lg-after7of8 {
    margin-right: 87.5% !important;
  }

  .drizzle-u-lg-after9of10 {
    margin-right: 90% !important;
  }

  .drizzle-u-lg-after11of12 {
    margin-right: 91.66667% !important;
  }

}
/**
 * @define utilities
 * Specify the proportional offset before an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

.drizzle-u-before1of12 {
  margin-left: 8.33333% !important;
}

.drizzle-u-before1of10 {
  margin-left: 10% !important;
}

.drizzle-u-before1of8 {
  margin-left: 12.5% !important;
}

.drizzle-u-before1of6,
.drizzle-u-before2of12 {
  margin-left: 16.66667% !important;
}

.drizzle-u-before1of5,
.drizzle-u-before2of10 {
  margin-left: 20% !important;
}

.drizzle-u-before1of4,
.drizzle-u-before2of8,
.drizzle-u-before3of12 {
  margin-left: 25% !important;
}

.drizzle-u-before3of10 {
  margin-left: 30% !important;
}

.drizzle-u-before1of3,
.drizzle-u-before2of6,
.drizzle-u-before4of12 {
  margin-left: 33.33333% !important;
}

.drizzle-u-before3of8 {
  margin-left: 37.5% !important;
}

.drizzle-u-before2of5,
.drizzle-u-before4of10 {
  margin-left: 40% !important;
}

.drizzle-u-before5of12 {
  margin-left: 41.66667% !important;
}

.drizzle-u-before1of2,
.drizzle-u-before2of4,
.drizzle-u-before3of6,
.drizzle-u-before4of8,
.drizzle-u-before5of10,
.drizzle-u-before6of12 {
  margin-left: 50% !important;
}

.drizzle-u-before7of12 {
  margin-left: 58.33333% !important;
}

.drizzle-u-before3of5,
.drizzle-u-before6of10 {
  margin-left: 60% !important;
}

.drizzle-u-before5of8 {
  margin-left: 62.5% !important;
}

.drizzle-u-before2of3,
.drizzle-u-before4of6,
.drizzle-u-before8of12 {
  margin-left: 66.66667% !important;
}

.drizzle-u-before7of10 {
  margin-left: 70% !important;
}

.drizzle-u-before3of4,
.drizzle-u-before6of8,
.drizzle-u-before9of12 {
  margin-left: 75% !important;
}

.drizzle-u-before4of5,
.drizzle-u-before8of10 {
  margin-left: 80% !important;
}

.drizzle-u-before5of6,
.drizzle-u-before10of12 {
  margin-left: 83.33333% !important;
}

.drizzle-u-before7of8 {
  margin-left: 87.5% !important;
}

.drizzle-u-before9of10 {
  margin-left: 90% !important;
}

.drizzle-u-before11of12 {
  margin-left: 91.66667% !important;
}
/**
 * @define utilities
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (max-width: 30em) {

  .drizzle-u-sm-beforeNone {
    margin-left: 0 !important;
  }

  .drizzle-u-sm-before1of12 {
    margin-left: 8.33333% !important;
  }

  .drizzle-u-sm-before1of10 {
    margin-left: 10% !important;
  }

  .drizzle-u-sm-before1of8 {
    margin-left: 12.5% !important;
  }

  .drizzle-u-sm-before1of6,
  .drizzle-u-sm-before2of12 {
    margin-left: 16.66667% !important;
  }

  .drizzle-u-sm-before1of5,
  .drizzle-u-sm-before2of10 {
    margin-left: 20% !important;
  }

  .drizzle-u-sm-before1of4,
  .drizzle-u-sm-before2of8,
  .drizzle-u-sm-before3of12 {
    margin-left: 25% !important;
  }

  .drizzle-u-sm-before3of10 {
    margin-left: 30% !important;
  }

  .drizzle-u-sm-before1of3,
  .drizzle-u-sm-before2of6,
  .drizzle-u-sm-before4of12 {
    margin-left: 33.33333% !important;
  }

  .drizzle-u-sm-before3of8 {
    margin-left: 37.5% !important;
  }

  .drizzle-u-sm-before2of5,
  .drizzle-u-sm-before4of10 {
    margin-left: 40% !important;
  }

  .drizzle-u-sm-before5of12 {
    margin-left: 41.66667% !important;
  }

  .drizzle-u-sm-before1of2,
  .drizzle-u-sm-before2of4,
  .drizzle-u-sm-before3of6,
  .drizzle-u-sm-before4of8,
  .drizzle-u-sm-before5of10,
  .drizzle-u-sm-before6of12 {
    margin-left: 50% !important;
  }

  .drizzle-u-sm-before7of12 {
    margin-left: 58.33333% !important;
  }

  .drizzle-u-sm-before3of5,
  .drizzle-u-sm-before6of10 {
    margin-left: 60% !important;
  }

  .drizzle-u-sm-before5of8 {
    margin-left: 62.5% !important;
  }

  .drizzle-u-sm-before2of3,
  .drizzle-u-sm-before4of6,
  .drizzle-u-sm-before8of12 {
    margin-left: 66.66667% !important;
  }

  .drizzle-u-sm-before7of10 {
    margin-left: 70% !important;
  }

  .drizzle-u-sm-before3of4,
  .drizzle-u-sm-before6of8,
  .drizzle-u-sm-before9of12 {
    margin-left: 75% !important;
  }

  .drizzle-u-sm-before4of5,
  .drizzle-u-sm-before8of10 {
    margin-left: 80% !important;
  }

  .drizzle-u-sm-before5of6,
  .drizzle-u-sm-before10of12 {
    margin-left: 83.33333% !important;
  }

  .drizzle-u-sm-before7of8 {
    margin-left: 87.5% !important;
  }

  .drizzle-u-sm-before9of10 {
    margin-left: 90% !important;
  }

  .drizzle-u-sm-before11of12 {
    margin-left: 91.66667% !important;
  }

}
/**
 * @define utilities
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 40em) {

  .drizzle-u-md-beforeNone {
    margin-left: 0 !important;
  }

  .drizzle-u-md-before1of12 {
    margin-left: 8.33333% !important;
  }

  .drizzle-u-md-before1of10 {
    margin-left: 10% !important;
  }

  .drizzle-u-md-before1of8 {
    margin-left: 12.5% !important;
  }

  .drizzle-u-md-before1of6,
  .drizzle-u-md-before2of12 {
    margin-left: 16.66667% !important;
  }

  .drizzle-u-md-before1of5,
  .drizzle-u-md-before2of10 {
    margin-left: 20% !important;
  }

  .drizzle-u-md-before1of4,
  .drizzle-u-md-before2of8,
  .drizzle-u-md-before3of12 {
    margin-left: 25% !important;
  }

  .drizzle-u-md-before3of10 {
    margin-left: 30% !important;
  }

  .drizzle-u-md-before1of3,
  .drizzle-u-md-before2of6,
  .drizzle-u-md-before4of12 {
    margin-left: 33.33333% !important;
  }

  .drizzle-u-md-before3of8 {
    margin-left: 37.5% !important;
  }

  .drizzle-u-md-before2of5,
  .drizzle-u-md-before4of10 {
    margin-left: 40% !important;
  }

  .drizzle-u-md-before5of12 {
    margin-left: 41.66667% !important;
  }

  .drizzle-u-md-before1of2,
  .drizzle-u-md-before2of4,
  .drizzle-u-md-before3of6,
  .drizzle-u-md-before4of8,
  .drizzle-u-md-before5of10,
  .drizzle-u-md-before6of12 {
    margin-left: 50% !important;
  }

  .drizzle-u-md-before7of12 {
    margin-left: 58.33333% !important;
  }

  .drizzle-u-md-before3of5,
  .drizzle-u-md-before6of10 {
    margin-left: 60% !important;
  }

  .drizzle-u-md-before5of8 {
    margin-left: 62.5% !important;
  }

  .drizzle-u-md-before2of3,
  .drizzle-u-md-before4of6,
  .drizzle-u-md-before8of12 {
    margin-left: 66.66667% !important;
  }

  .drizzle-u-md-before7of10 {
    margin-left: 70% !important;
  }

  .drizzle-u-md-before3of4,
  .drizzle-u-md-before6of8,
  .drizzle-u-md-before9of12 {
    margin-left: 75% !important;
  }

  .drizzle-u-md-before4of5,
  .drizzle-u-md-before8of10 {
    margin-left: 80% !important;
  }

  .drizzle-u-md-before5of6,
  .drizzle-u-md-before10of12 {
    margin-left: 83.33333% !important;
  }

  .drizzle-u-md-before7of8 {
    margin-left: 87.5% !important;
  }

  .drizzle-u-md-before9of10 {
    margin-left: 90% !important;
  }

  .drizzle-u-md-before11of12 {
    margin-left: 91.66667% !important;
  }

}
/**
 * @define utilities
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 60em) {

  .drizzle-u-lg-beforeNone {
    margin-left: 0 !important;
  }

  .drizzle-u-lg-before1of12 {
    margin-left: 8.33333% !important;
  }

  .drizzle-u-lg-before1of10 {
    margin-left: 10% !important;
  }

  .drizzle-u-lg-before1of8 {
    margin-left: 12.5% !important;
  }

  .drizzle-u-lg-before1of6,
  .drizzle-u-lg-before2of12 {
    margin-left: 16.66667% !important;
  }

  .drizzle-u-lg-before1of5,
  .drizzle-u-lg-before2of10 {
    margin-left: 20% !important;
  }

  .drizzle-u-lg-before1of4,
  .drizzle-u-lg-before2of8,
  .drizzle-u-lg-before3of12 {
    margin-left: 25% !important;
  }

  .drizzle-u-lg-before3of10 {
    margin-left: 30% !important;
  }

  .drizzle-u-lg-before1of3,
  .drizzle-u-lg-before2of6,
  .drizzle-u-lg-before4of12 {
    margin-left: 33.33333% !important;
  }

  .drizzle-u-lg-before3of8 {
    margin-left: 37.5% !important;
  }

  .drizzle-u-lg-before2of5,
  .drizzle-u-lg-before4of10 {
    margin-left: 40% !important;
  }

  .drizzle-u-lg-before5of12 {
    margin-left: 41.66667% !important;
  }

  .drizzle-u-lg-before1of2,
  .drizzle-u-lg-before2of4,
  .drizzle-u-lg-before3of6,
  .drizzle-u-lg-before4of8,
  .drizzle-u-lg-before5of10,
  .drizzle-u-lg-before6of12 {
    margin-left: 50% !important;
  }

  .drizzle-u-lg-before7of12 {
    margin-left: 58.33333% !important;
  }

  .drizzle-u-lg-before3of5,
  .drizzle-u-lg-before6of10 {
    margin-left: 60% !important;
  }

  .drizzle-u-lg-before5of8 {
    margin-left: 62.5% !important;
  }

  .drizzle-u-lg-before2of3,
  .drizzle-u-lg-before4of6,
  .drizzle-u-lg-before8of12 {
    margin-left: 66.66667% !important;
  }

  .drizzle-u-lg-before7of10 {
    margin-left: 70% !important;
  }

  .drizzle-u-lg-before3of4,
  .drizzle-u-lg-before6of8,
  .drizzle-u-lg-before9of12 {
    margin-left: 75% !important;
  }

  .drizzle-u-lg-before4of5,
  .drizzle-u-lg-before8of10 {
    margin-left: 80% !important;
  }

  .drizzle-u-lg-before5of6,
  .drizzle-u-lg-before10of12 {
    margin-left: 83.33333% !important;
  }

  .drizzle-u-lg-before7of8 {
    margin-left: 87.5% !important;
  }

  .drizzle-u-lg-before9of10 {
    margin-left: 90% !important;
  }

  .drizzle-u-lg-before11of12 {
    margin-left: 91.66667% !important;
  }

}
/** @define utilities */

.drizzle-u-posFit,
.drizzle-u-posAbsoluteCenter,
.drizzle-u-posAbsolute {
  position: absolute !important;
}

/**
 * Element will be centered to its nearest relatively-positioned
 * ancestor.
 */

.drizzle-u-posFixedCenter,
.drizzle-u-posAbsoluteCenter {
  left: 50% !important;
  top: 50% !important;
  transform: translate(-50%, -50%) !important;
}

.drizzle-u-posFit,
.drizzle-u-posFullScreen {
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important;
  right: 0 !important;
  top: 0 !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.drizzle-u-posFullScreen,
.drizzle-u-posFixedCenter,
.drizzle-u-posFixed {
  backface-visibility: hidden; /* 1 */
  position: fixed !important;
}

.drizzle-u-posRelative {
  position: relative !important;
}

.drizzle-u-posStatic {
  position: static !important;
}
/**
 * @define utilities
 * Sizing utilities
 */

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */

.drizzle-u-size1of12 {
  flex-basis: auto !important;
  width: 8.33333% !important;
}

.drizzle-u-size1of10 {
  flex-basis: auto !important;
  width: 10% !important;
}

.drizzle-u-size1of8 {
  flex-basis: auto !important;
  width: 12.5% !important;
}

.drizzle-u-size1of6,
.drizzle-u-size2of12 {
  flex-basis: auto !important;
  width: 16.66667% !important;
}

.drizzle-u-size1of5,
.drizzle-u-size2of10 {
  flex-basis: auto !important;
  width: 20% !important;
}

.drizzle-u-size1of4,
.drizzle-u-size2of8,
.drizzle-u-size3of12 {
  flex-basis: auto !important;
  width: 25% !important;
}

.drizzle-u-size3of10 {
  flex-basis: auto !important;
  width: 30% !important;
}

.drizzle-u-size1of3,
.drizzle-u-size2of6,
.drizzle-u-size4of12 {
  flex-basis: auto !important;
  width: 33.33333% !important;
}

.drizzle-u-size3of8 {
  flex-basis: auto !important;
  width: 37.5% !important;
}

.drizzle-u-size2of5,
.drizzle-u-size4of10 {
  flex-basis: auto !important;
  width: 40% !important;
}

.drizzle-u-size5of12 {
  flex-basis: auto !important;
  width: 41.66667% !important;
}

.drizzle-u-size1of2,
.drizzle-u-size2of4,
.drizzle-u-size3of6,
.drizzle-u-size4of8,
.drizzle-u-size5of10,
.drizzle-u-size6of12 {
  flex-basis: auto !important;
  width: 50% !important;
}

.drizzle-u-size7of12 {
  flex-basis: auto !important;
  width: 58.33333% !important;
}

.drizzle-u-size3of5,
.drizzle-u-size6of10 {
  flex-basis: auto !important;
  width: 60% !important;
}

.drizzle-u-size5of8 {
  flex-basis: auto !important;
  width: 62.5% !important;
}

.drizzle-u-size2of3,
.drizzle-u-size4of6,
.drizzle-u-size8of12 {
  flex-basis: auto !important;
  width: 66.66667% !important;
}

.drizzle-u-size7of10 {
  flex-basis: auto !important;
  width: 70% !important;
}

.drizzle-u-size3of4,
.drizzle-u-size6of8,
.drizzle-u-size9of12 {
  flex-basis: auto !important;
  width: 75% !important;
}

.drizzle-u-size4of5,
.drizzle-u-size8of10 {
  flex-basis: auto !important;
  width: 80% !important;
}

.drizzle-u-size5of6,
.drizzle-u-size10of12 {
  flex-basis: auto !important;
  width: 83.33333% !important;
}

.drizzle-u-size7of8 {
  flex-basis: auto !important;
  width: 87.5% !important;
}

.drizzle-u-size9of10 {
  flex-basis: auto !important;
  width: 90% !important;
}

.drizzle-u-size11of12 {
  flex-basis: auto !important;
  width: 91.66667% !important;
}

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.drizzle-u-sizeFit {
  flex-basis: auto !important;
}

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 *    http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 *    http://git.io/vllMt
 */

.drizzle-u-sizeFill {
  flex: 1 1 0% !important; /* 1 */
  flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.drizzle-u-sizeFillAlt {
  flex: 1 1 auto !important;
  flex-basis: auto !important;
}

/**
 * Make an element the width of its parent.
 */

.drizzle-u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}
/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (max-width: 30em) {

  /* Proportional widths: breakpoint 1 (small)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .drizzle-u-sm-size1of12 {
    flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .drizzle-u-sm-size1of10 {
    flex-basis: auto !important;
    width: 10% !important;
  }

  .drizzle-u-sm-size1of8 {
    flex-basis: auto !important;
    width: 12.5% !important;
  }

  .drizzle-u-sm-size1of6,
  .drizzle-u-sm-size2of12 {
    flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .drizzle-u-sm-size1of5,
  .drizzle-u-sm-size2of10 {
    flex-basis: auto !important;
    width: 20% !important;
  }

  .drizzle-u-sm-size1of4,
  .drizzle-u-sm-size2of8,
  .drizzle-u-sm-size3of12 {
    flex-basis: auto !important;
    width: 25% !important;
  }

  .drizzle-u-sm-size3of10 {
    flex-basis: auto !important;
    width: 30% !important;
  }

  .drizzle-u-sm-size1of3,
  .drizzle-u-sm-size2of6,
  .drizzle-u-sm-size4of12 {
    flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .drizzle-u-sm-size3of8 {
    flex-basis: auto !important;
    width: 37.5% !important;
  }

  .drizzle-u-sm-size2of5,
  .drizzle-u-sm-size4of10 {
    flex-basis: auto !important;
    width: 40% !important;
  }

  .drizzle-u-sm-size5of12 {
    flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .drizzle-u-sm-size1of2,
  .drizzle-u-sm-size2of4,
  .drizzle-u-sm-size3of6,
  .drizzle-u-sm-size4of8,
  .drizzle-u-sm-size5of10,
  .drizzle-u-sm-size6of12 {
    flex-basis: auto !important;
    width: 50% !important;
  }

  .drizzle-u-sm-size7of12 {
    flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .drizzle-u-sm-size3of5,
  .drizzle-u-sm-size6of10 {
    flex-basis: auto !important;
    width: 60% !important;
  }

  .drizzle-u-sm-size5of8 {
    flex-basis: auto !important;
    width: 62.5% !important;
  }

  .drizzle-u-sm-size2of3,
  .drizzle-u-sm-size4of6,
  .drizzle-u-sm-size8of12 {
    flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .drizzle-u-sm-size7of10 {
    flex-basis: auto !important;
    width: 70% !important;
  }

  .drizzle-u-sm-size3of4,
  .drizzle-u-sm-size6of8,
  .drizzle-u-sm-size9of12 {
    flex-basis: auto !important;
    width: 75% !important;
  }

  .drizzle-u-sm-size4of5,
  .drizzle-u-sm-size8of10 {
    flex-basis: auto !important;
    width: 80% !important;
  }

  .drizzle-u-sm-size5of6,
  .drizzle-u-sm-size10of12 {
    flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .drizzle-u-sm-size7of8 {
    flex-basis: auto !important;
    width: 87.5% !important;
  }

  .drizzle-u-sm-size9of10 {
    flex-basis: auto !important;
    width: 90% !important;
  }

  .drizzle-u-sm-size11of12 {
    flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .drizzle-u-sm-sizeFit {
    flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .drizzle-u-sm-sizeFill {
    flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .drizzle-u-sm-sizeFillAlt {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .drizzle-u-sm-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

}
/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */

@media (min-width: 40em) {

  /* Proportional widths: breakpoint 2 (medium)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */

  .drizzle-u-md-size1of12 {
    flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .drizzle-u-md-size1of10 {
    flex-basis: auto !important;
    width: 10% !important;
  }

  .drizzle-u-md-size1of8 {
    flex-basis: auto !important;
    width: 12.5% !important;
  }

  .drizzle-u-md-size1of6,
  .drizzle-u-md-size2of12 {
    flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .drizzle-u-md-size1of5,
  .drizzle-u-md-size2of10 {
    flex-basis: auto !important;
    width: 20% !important;
  }

  .drizzle-u-md-size1of4,
  .drizzle-u-md-size2of8,
  .drizzle-u-md-size3of12 {
    flex-basis: auto !important;
    width: 25% !important;
  }

  .drizzle-u-md-size3of10 {
    flex-basis: auto !important;
    width: 30% !important;
  }

  .drizzle-u-md-size1of3,
  .drizzle-u-md-size2of6,
  .drizzle-u-md-size4of12 {
    flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .drizzle-u-md-size3of8 {
    flex-basis: auto !important;
    width: 37.5% !important;
  }

  .drizzle-u-md-size2of5,
  .drizzle-u-md-size4of10 {
    flex-basis: auto !important;
    width: 40% !important;
  }

  .drizzle-u-md-size5of12 {
    flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .drizzle-u-md-size1of2,
  .drizzle-u-md-size2of4,
  .drizzle-u-md-size3of6,
  .drizzle-u-md-size4of8,
  .drizzle-u-md-size5of10,
  .drizzle-u-md-size6of12 {
    flex-basis: auto !important;
    width: 50% !important;
  }

  .drizzle-u-md-size7of12 {
    flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .drizzle-u-md-size3of5,
  .drizzle-u-md-size6of10 {
    flex-basis: auto !important;
    width: 60% !important;
  }

  .drizzle-u-md-size5of8 {
    flex-basis: auto !important;
    width: 62.5% !important;
  }

  .drizzle-u-md-size2of3,
  .drizzle-u-md-size4of6,
  .drizzle-u-md-size8of12 {
    flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .drizzle-u-md-size7of10 {
    flex-basis: auto !important;
    width: 70% !important;
  }

  .drizzle-u-md-size3of4,
  .drizzle-u-md-size6of8,
  .drizzle-u-md-size9of12 {
    flex-basis: auto !important;
    width: 75% !important;
  }

  .drizzle-u-md-size4of5,
  .drizzle-u-md-size8of10 {
    flex-basis: auto !important;
    width: 80% !important;
  }

  .drizzle-u-md-size5of6,
  .drizzle-u-md-size10of12 {
    flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .drizzle-u-md-size7of8 {
    flex-basis: auto !important;
    width: 87.5% !important;
  }

  .drizzle-u-md-size9of10 {
    flex-basis: auto !important;
    width: 90% !important;
  }

  .drizzle-u-md-size11of12 {
    flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .drizzle-u-md-sizeFit {
    flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .drizzle-u-md-sizeFill {
    flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .drizzle-u-md-sizeFillAlt {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .drizzle-u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

}
/**
 * @define utilities
 * Size: breakpoint 3 (large)
 */

@media (min-width: 60em) {

  /* Proportional widths: breakpoint 3 (large)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .drizzle-u-lg-size1of12 {
    flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .drizzle-u-lg-size1of10 {
    flex-basis: auto !important;
    width: 10% !important;
  }

  .drizzle-u-lg-size1of8 {
    flex-basis: auto !important;
    width: 12.5% !important;
  }

  .drizzle-u-lg-size1of6,
  .drizzle-u-lg-size2of12 {
    flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .drizzle-u-lg-size1of5,
  .drizzle-u-lg-size2of10 {
    flex-basis: auto !important;
    width: 20% !important;
  }

  .drizzle-u-lg-size1of4,
  .drizzle-u-lg-size2of8,
  .drizzle-u-lg-size3of12 {
    flex-basis: auto !important;
    width: 25% !important;
  }

  .drizzle-u-lg-size3of10 {
    flex-basis: auto !important;
    width: 30% !important;
  }

  .drizzle-u-lg-size1of3,
  .drizzle-u-lg-size2of6,
  .drizzle-u-lg-size4of12 {
    flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .drizzle-u-lg-size3of8 {
    flex-basis: auto !important;
    width: 37.5% !important;
  }

  .drizzle-u-lg-size2of5,
  .drizzle-u-lg-size4of10 {
    flex-basis: auto !important;
    width: 40% !important;
  }

  .drizzle-u-lg-size5of12 {
    flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .drizzle-u-lg-size1of2,
  .drizzle-u-lg-size2of4,
  .drizzle-u-lg-size3of6,
  .drizzle-u-lg-size4of8,
  .drizzle-u-lg-size5of10,
  .drizzle-u-lg-size6of12 {
    flex-basis: auto !important;
    width: 50% !important;
  }

  .drizzle-u-lg-size7of12 {
    flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .drizzle-u-lg-size3of5,
  .drizzle-u-lg-size6of10 {
    flex-basis: auto !important;
    width: 60% !important;
  }

  .drizzle-u-lg-size5of8 {
    flex-basis: auto !important;
    width: 62.5% !important;
  }

  .drizzle-u-lg-size2of3,
  .drizzle-u-lg-size4of6,
  .drizzle-u-lg-size8of12 {
    flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .drizzle-u-lg-size7of10 {
    flex-basis: auto !important;
    width: 70% !important;
  }

  .drizzle-u-lg-size3of4,
  .drizzle-u-lg-size6of8,
  .drizzle-u-lg-size9of12 {
    flex-basis: auto !important;
    width: 75% !important;
  }

  .drizzle-u-lg-size4of5,
  .drizzle-u-lg-size8of10 {
    flex-basis: auto !important;
    width: 80% !important;
  }

  .drizzle-u-lg-size5of6,
  .drizzle-u-lg-size10of12 {
    flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .drizzle-u-lg-size7of8 {
    flex-basis: auto !important;
    width: 87.5% !important;
  }

  .drizzle-u-lg-size9of10 {
    flex-basis: auto !important;
    width: 90% !important;
  }

  .drizzle-u-lg-size11of12 {
    flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .drizzle-u-lg-sizeFit {
    flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .drizzle-u-lg-sizeFill {
    flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .drizzle-u-lg-sizeFillAlt {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .drizzle-u-lg-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

}
/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.drizzle-u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.drizzle-u-textCenter {
  text-align: center !important;
}

.drizzle-u-textLeft {
  text-align: left !important;
}

.drizzle-u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.drizzle-u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, IE 10+
 * 2. Safari 7 and future browsers
 * 3. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 */

.drizzle-u-textKern {
  font-feature-settings: "kern" 1, "kern"; /* 1 */
  font-kerning: normal; /* 2 */
  text-rendering: optimizeLegibility; /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.drizzle-u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.drizzle-u-textTruncate {
  max-width: 100%; /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important; /* 2 */
}
/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.drizzle-u-flex {
  display: flex !important;
}

.drizzle-u-flexInline {
  display: inline-flex !important;
}

/**
 * Direction: row
 */

.drizzle-u-flexRow {
  flex-direction: row !important;
}

.drizzle-u-flexRowReverse {
  flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.drizzle-u-flexCol {
  flex-direction: column !important;
}

.drizzle-u-flexColReverse {
  flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.drizzle-u-flexWrap {
  flex-wrap: wrap !important;
}

.drizzle-u-flexNoWrap {
  flex-wrap: nowrap !important;
}

.drizzle-u-flexWrapReverse {
  flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.drizzle-u-flexJustifyStart {
  justify-content: flex-start !important;
}

.drizzle-u-flexJustifyEnd {
  justify-content: flex-end !important;
}

.drizzle-u-flexJustifyCenter {
  justify-content: center !important;
}

.drizzle-u-flexJustifyBetween {
  justify-content: space-between !important;
}

.drizzle-u-flexJustifyAround {
  justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.drizzle-u-flexAlignItemsStart {
  -ms-grid-row-align: flex-start !important;
      align-items: flex-start !important;
}

.drizzle-u-flexAlignItemsEnd {
  -ms-grid-row-align: flex-end !important;
      align-items: flex-end !important;
}

.drizzle-u-flexAlignItemsCenter {
  -ms-grid-row-align: center !important;
      align-items: center !important;
}

.drizzle-u-flexAlignItemsStretch {
  -ms-grid-row-align: stretch !important;
      align-items: stretch !important;
}

.drizzle-u-flexAlignItemsBaseline {
  -ms-grid-row-align: baseline !important;
      align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.drizzle-u-flexAlignContentStart {
  align-content: flex-start !important;
}

.drizzle-u-flexAlignContentEnd {
  align-content: flex-end !important;
}

.drizzle-u-flexAlignContentCenter {
  align-content: center !important;
}

.drizzle-u-flexAlignContentStretch {
  align-content: stretch !important;
}

.drizzle-u-flexAlignContentBetween {
  align-content: space-between !important;
}

.drizzle-u-flexAlignContentAround {
  align-content: space-around !important;
}

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */

/* postcss-bem-linter: ignore */

.drizzle-u-flex > *,
.drizzle-u-flexInline > * {
  flex-shrink: 1; /* 1 */
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.drizzle-u-flexAlignSelfStart {
  align-self: flex-start !important;
}

.drizzle-u-flexAlignSelfEnd {
  align-self: flex-end !important;
}

.drizzle-u-flexAlignSelfCenter {
  align-self: center !important;
}

.drizzle-u-flexAlignSelfStretch {
  align-self: stretch !important;
}

.drizzle-u-flexAlignSelfBaseline {
  align-self: baseline !important;
}

.drizzle-u-flexAlignSelfAuto {
  align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.drizzle-u-flexOrderFirst {
  order: -1 !important;
}

.drizzle-u-flexOrderLast {
  order: 1 !important;
}

.drizzle-u-flexOrderNone {
  order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

.drizzle-u-flexGrow1 {
  flex: 1 1 0% !important; /* 1 */
}

.drizzle-u-flexGrow2 {
  flex: 2 1 0% !important;
}

.drizzle-u-flexGrow3 {
  flex: 3 1 0% !important;
}

.drizzle-u-flexGrow4 {
  flex: 4 1 0% !important;
}

.drizzle-u-flexGrow5 {
  flex: 5 1 0% !important;
}

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.drizzle-u-flexExpand {
  margin: auto !important;
}

.drizzle-u-flexExpandLeft {
  margin-left: auto !important;
}

.drizzle-u-flexExpandRight {
  margin-right: auto !important;
}

.drizzle-u-flexExpandTop {
  margin-top: auto !important;
}

.drizzle-u-flexExpandBottom {
  margin-bottom: auto !important;
}
/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (max-width: 30em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .drizzle-u-sm-flex {
    display: flex !important;
  }

  .drizzle-u-sm-flexInline {
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .drizzle-u-sm-flexRow {
    flex-direction: row !important;
  }

  .drizzle-u-sm-flexRowReverse {
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .drizzle-u-sm-flexCol {
    flex-direction: column !important;
  }

  .drizzle-u-sm-flexColReverse {
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .drizzle-u-sm-flexWrap {
    flex-wrap: wrap !important;
  }

  .drizzle-u-sm-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .drizzle-u-sm-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .drizzle-u-sm-flexJustifyStart {
    justify-content: flex-start !important;
  }

  .drizzle-u-sm-flexJustifyEnd {
    justify-content: flex-end !important;
  }

  .drizzle-u-sm-flexJustifyCenter {
    justify-content: center !important;
  }

  .drizzle-u-sm-flexJustifyBetween {
    justify-content: space-between !important;
  }

  .drizzle-u-sm-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .drizzle-u-sm-flexAlignItemsStart {
    -ms-grid-row-align: flex-start !important;
        align-items: flex-start !important;
  }

  .drizzle-u-sm-flexAlignItemsEnd {
    -ms-grid-row-align: flex-end !important;
        align-items: flex-end !important;
  }

  .drizzle-u-sm-flexAlignItemsCenter {
    -ms-grid-row-align: center !important;
        align-items: center !important;
  }

  .drizzle-u-sm-flexAlignItemsStretch {
    -ms-grid-row-align: stretch !important;
        align-items: stretch !important;
  }

  .drizzle-u-sm-flexAlignItemsBaseline {
    -ms-grid-row-align: baseline !important;
        align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .drizzle-u-sm-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .drizzle-u-sm-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .drizzle-u-sm-flexAlignContentCenter {
    align-content: center !important;
  }

  .drizzle-u-sm-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .drizzle-u-sm-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .drizzle-u-sm-flexAlignContentAround {
    align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .drizzle-u-sm-flex > *,
  .drizzle-u-sm-flexInline > * {
    flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .drizzle-u-sm-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .drizzle-u-sm-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .drizzle-u-sm-flexAlignSelfCenter {
    align-self: center !important;
  }

  .drizzle-u-sm-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .drizzle-u-sm-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .drizzle-u-sm-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .drizzle-u-sm-flexOrderFirst {
    order: -1 !important;
  }

  .drizzle-u-sm-flexOrderLast {
    order: 1 !important;
  }

  .drizzle-u-sm-flexOrderNone {
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .drizzle-u-sm-flexGrow1 {
    flex: 1 1 0% !important; /* 1 */
  }

  .drizzle-u-sm-flexGrow2 {
    flex: 2 1 0% !important;
  }

  .drizzle-u-sm-flexGrow3 {
    flex: 3 1 0% !important;
  }

  .drizzle-u-sm-flexGrow4 {
    flex: 4 1 0% !important;
  }

  .drizzle-u-sm-flexGrow5 {
    flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .drizzle-u-sm-flexExpand {
    margin: auto !important;
  }

  .drizzle-u-sm-flexExpandLeft {
    margin-left: auto !important;
  }

  .drizzle-u-sm-flexExpandRight {
    margin-right: auto !important;
  }

  .drizzle-u-sm-flexExpandTop {
    margin-top: auto !important;
  }

  .drizzle-u-sm-flexExpandBottom {
    margin-bottom: auto !important;
  }

}
/**
 * @define utilities
 * Size: breakpoint 1 (medium)
 */

@media (min-width: 40em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .drizzle-u-md-flex {
    display: flex !important;
  }

  .drizzle-u-md-flexInline {
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .drizzle-u-md-flexRow {
    flex-direction: row !important;
  }

  .drizzle-u-md-flexRowReverse {
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .drizzle-u-md-flexCol {
    flex-direction: column !important;
  }

  .drizzle-u-md-flexColReverse {
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .drizzle-u-md-flexWrap {
    flex-wrap: wrap !important;
  }

  .drizzle-u-md-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .drizzle-u-md-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .drizzle-u-md-flexJustifyStart {
    justify-content: flex-start !important;
  }

  .drizzle-u-md-flexJustifyEnd {
    justify-content: flex-end !important;
  }

  .drizzle-u-md-flexJustifyCenter {
    justify-content: center !important;
  }

  .drizzle-u-md-flexJustifyBetween {
    justify-content: space-between !important;
  }

  .drizzle-u-md-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .drizzle-u-md-flexAlignItemsStart {
    -ms-grid-row-align: flex-start !important;
        align-items: flex-start !important;
  }

  .drizzle-u-md-flexAlignItemsEnd {
    -ms-grid-row-align: flex-end !important;
        align-items: flex-end !important;
  }

  .drizzle-u-md-flexAlignItemsCenter {
    -ms-grid-row-align: center !important;
        align-items: center !important;
  }

  .drizzle-u-md-flexAlignItemsStretch {
    -ms-grid-row-align: stretch !important;
        align-items: stretch !important;
  }

  .drizzle-u-md-flexAlignItemsBaseline {
    -ms-grid-row-align: baseline !important;
        align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .drizzle-u-md-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .drizzle-u-md-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .drizzle-u-md-flexAlignContentCenter {
    align-content: center !important;
  }

  .drizzle-u-md-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .drizzle-u-md-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .drizzle-u-md-flexAlignContentAround {
    align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .drizzle-u-md-flex > *,
  .drizzle-u-md-flexInline > * {
    flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .drizzle-u-md-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .drizzle-u-md-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .drizzle-u-md-flexAlignSelfCenter {
    align-self: center !important;
  }

  .drizzle-u-md-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .drizzle-u-md-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .drizzle-u-md-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .drizzle-u-md-flexOrderFirst {
    order: -1 !important;
  }

  .drizzle-u-md-flexOrderLast {
    order: 1 !important;
  }

  .drizzle-u-md-flexOrderNone {
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .drizzle-u-md-flexGrow1 {
    flex: 1 1 0% !important; /* 1 */
  }

  .drizzle-u-md-flexGrow2 {
    flex: 2 1 0% !important;
  }

  .drizzle-u-md-flexGrow3 {
    flex: 3 1 0% !important;
  }

  .drizzle-u-md-flexGrow4 {
    flex: 4 1 0% !important;
  }

  .drizzle-u-md-flexGrow5 {
    flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .drizzle-u-md-flexExpand {
    margin: auto !important;
  }

  .drizzle-u-md-flexExpandLeft {
    margin-left: auto !important;
  }

  .drizzle-u-md-flexExpandRight {
    margin-right: auto !important;
  }

  .drizzle-u-md-flexExpandTop {
    margin-top: auto !important;
  }

  .drizzle-u-md-flexExpandBottom {
    margin-bottom: auto !important;
  }

}
/**
 * @define utilities
 * Size: breakpoint 1 (large)
 */

@media (min-width: 60em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .drizzle-u-lg-flex {
    display: flex !important;
  }

  .drizzle-u-lg-flexInline {
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .drizzle-u-lg-flexRow {
    flex-direction: row !important;
  }

  .drizzle-u-lg-flexRowReverse {
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .drizzle-u-lg-flexCol {
    flex-direction: column !important;
  }

  .drizzle-u-lg-flexColReverse {
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .drizzle-u-lg-flexWrap {
    flex-wrap: wrap !important;
  }

  .drizzle-u-lg-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .drizzle-u-lg-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .drizzle-u-lg-flexJustifyStart {
    justify-content: flex-start !important;
  }

  .drizzle-u-lg-flexJustifyEnd {
    justify-content: flex-end !important;
  }

  .drizzle-u-lg-flexJustifyCenter {
    justify-content: center !important;
  }

  .drizzle-u-lg-flexJustifyBetween {
    justify-content: space-between !important;
  }

  .drizzle-u-lg-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .drizzle-u-lg-flexAlignItemsStart {
    -ms-grid-row-align: flex-start !important;
        align-items: flex-start !important;
  }

  .drizzle-u-lg-flexAlignItemsEnd {
    -ms-grid-row-align: flex-end !important;
        align-items: flex-end !important;
  }

  .drizzle-u-lg-flexAlignItemsCenter {
    -ms-grid-row-align: center !important;
        align-items: center !important;
  }

  .drizzle-u-lg-flexAlignItemsStretch {
    -ms-grid-row-align: stretch !important;
        align-items: stretch !important;
  }

  .drizzle-u-lg-flexAlignItemsBaseline {
    -ms-grid-row-align: baseline !important;
        align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .drizzle-u-lg-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .drizzle-u-lg-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .drizzle-u-lg-flexAlignContentCenter {
    align-content: center !important;
  }

  .drizzle-u-lg-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .drizzle-u-lg-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .drizzle-u-lg-flexAlignContentAround {
    align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .drizzle-u-lg-flex > *,
  .drizzle-u-lg-flexInline > * {
    flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .drizzle-u-lg-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .drizzle-u-lg-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .drizzle-u-lg-flexAlignSelfCenter {
    align-self: center !important;
  }

  .drizzle-u-lg-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .drizzle-u-lg-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .drizzle-u-lg-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .drizzle-u-lg-flexOrderFirst {
    order: -1 !important;
  }

  .drizzle-u-lg-flexOrderLast {
    order: 1 !important;
  }

  .drizzle-u-lg-flexOrderNone {
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .drizzle-u-lg-flexGrow1 {
    flex: 1 1 0% !important; /* 1 */
  }

  .drizzle-u-lg-flexGrow2 {
    flex: 2 1 0% !important;
  }

  .drizzle-u-lg-flexGrow3 {
    flex: 3 1 0% !important;
  }

  .drizzle-u-lg-flexGrow4 {
    flex: 4 1 0% !important;
  }

  .drizzle-u-lg-flexGrow5 {
    flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .drizzle-u-lg-flexExpand {
    margin: auto !important;
  }

  .drizzle-u-lg-flexExpandLeft {
    margin-left: auto !important;
  }

  .drizzle-u-lg-flexExpandRight {
    margin-right: auto !important;
  }

  .drizzle-u-lg-flexExpandTop {
    margin-top: auto !important;
  }

  .drizzle-u-lg-flexExpandBottom {
    margin-bottom: auto !important;
  }

}
.drizzle-u-border {
  border: 2px solid #f0f0f0 !important;
}

.drizzle-u-borderEnds,
.drizzle-u-borderTop {
  border-top: 2px solid #f0f0f0 !important;
}

.drizzle-u-borderSides,
.drizzle-u-borderRight {
  border-right: 2px solid #f0f0f0 !important;
}

.drizzle-u-borderEnds,
.drizzle-u-borderBottom {
  border-bottom: 2px solid #f0f0f0 !important;
}

.drizzle-u-borderSides,
.drizzle-u-borderLeft {
  border-left: 2px solid #f0f0f0 !important;
}
.drizzle-u-listUnstyled,
.drizzle-u-listInline {
  padding-left: 0;
  list-style: none;
}

.drizzle-u-listInline {
  position: relative;
  margin-right: -0.5em;
  margin-left: -0.5em;
}

.drizzle-u-listInline > li {
  display: inline-block;
  padding-right: 0.5em;
  padding-left: 0.5em;
}
.drizzle-u-pad {
  padding: 1rem !important;
}

.drizzle-u-padLeft {
  padding-left: 1rem !important;
}

.drizzle-u-padRight {
  padding-right: 1rem !important;
}

.drizzle-u-padSides {
  padding-left: 1rem !important;
  padding-right: 1rem !important;
}

.drizzle-u-padTop {
  padding-top: 1rem !important;
}

.drizzle-u-padBottom {
  padding-bottom: 1rem !important;
}

.drizzle-u-padEnds {
  padding-bottom: 1rem !important;
  padding-top: 1rem !important;
}

.drizzle-u-margin {
  margin: 1rem !important;
}

.drizzle-u-marginLeft {
  margin-left: 1rem !important;
}

.drizzle-u-marginRight {
  margin-right: 1rem !important;
}

.drizzle-u-marginSides {
  margin-left: 1rem !important;
  margin-right: 1rem !important;
}

.drizzle-u-marginTop {
  margin-top: 1rem !important;
}

.drizzle-u-marginBottom {
  margin-bottom: 1rem !important;
}

.drizzle-u-marginBottom-2x {
  margin-bottom: 2rem !important;
}

.drizzle-u-marginBottom-3x {
  margin-bottom: 3rem !important;
}

.drizzle-u-marginEnds {
  margin-bottom: 1rem !important;
  margin-top: 1rem !important;
}

.drizzle-u-rhythm > * + * {
  margin-top: 1rem;
}

.drizzle-u-noMargin {
  margin: 0 !important;
}

.drizzle-u-noMarginLeft {
  margin-left: 0 !important;
}

.drizzle-u-noMarginRight {
  margin-right: 0 !important;
}

.drizzle-u-noMarginSides {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

.drizzle-u-noMarginTop {
  margin-top: 0 !important;
}

.drizzle-u-noMarginBottom {
  margin-bottom: 0 !important;
}

.drizzle-u-noMarginEnds {
  margin-bottom: 0 !important;
  margin-top: 0 !important;
}
.drizzle-u-capitalize {
  text-transform: capitalize;
}

.drizzle-u-textSmaller {
  font-size: 0.875em;
}

.drizzle-u-linkHidden:not(:hover):not(:focus):not(:active) {
  color: inherit !important;
  text-decoration: none !important;
}

.drizzle-brandSwitcher {
  padding-bottom: 1em;
}

.drizzle-brandSwitcher select {
  margin: 1em auto 0;
  width: 90%;
}

.drizzle-Documentation {
  line-height: 1.5;
}

.drizzle-Button {
  text-decoration: none;
}

.drizzle-Button:hover {
  text-decoration: underline;
}

.example-grid {
  border-bottom: 2px #DADADA solid;
  margin-bottom: 2em;
  padding-bottom: 2em;
}

.example-grid [class*="grid-"] {
  background-color: #DADADA;
  border: 1px #241F20 solid;
  text-align: center;
}
